{"version":3,"sources":["webpack:///./src/views/board/skins/contents/Form.vue?ab08","webpack:///src/views/board/skins/contents/Form.vue","webpack:///./src/views/board/skins/contents/Form.vue?1481","webpack:///./src/views/board/skins/contents/Form.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","_v","_s","pageTitle","loading","on","save","ref","model","value","callback","$$v","valid","expression","rules","require","label","alphaNum","checkId","id","form","wr_1","$set","skins","uploadImage","_e","staticRenderFns","components","InputPassword","InputDuplicateCheck","name","title","props","config","access","data","confimPw","uploadFiles","tags","upImages","isWrite","parentItem","computed","mapState","member","table","pid","mounted","destroyed","methods","fetchSkinList","console","init","initForm","wr_reply","wr_parent","mb_id","wr_email","wr_name","wr_password","wr_category","wr_title","wr_content","wrTags","fileTitle","i","file","formData","keys","Object","key","cnt","wr_id","insert","update","component"],"mappings":"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","file":"js/chunk-2d0b363b.97e62094.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-container',{attrs:{\"fluid\":\"\"}},[_c('v-toolbar',[_c('v-toolbar-title',[_vm._v(_vm._s(_vm.pageTitle))]),_c('v-spacer'),_c('v-btn',{attrs:{\"color\":\"primary\",\"loading\":_vm.loading},on:{\"click\":_vm.save}},[_c('v-icon',{attrs:{\"left\":\"\"}},[_vm._v(\"mdi-pencil\")]),_vm._v(\" 저장 \")],1)],1),(_vm.form)?_c('v-form',{ref:\"form\",attrs:{\"lazy-validation\":\"\"},model:{value:(_vm.valid),callback:function ($$v) {_vm.valid=$$v},expression:\"valid\"}},[_c('input-duplicate-check',{ref:\"id\",attrs:{\"label\":\"ID\",\"rules\":[_vm.rules.require({ label: 'ID' }, _vm.rules.alphaNum())],\"cbCheck\":_vm.checkId,\"origin\":_vm.id ? _vm.form.wr_1 : '',\"readonly\":!!_vm.id},model:{value:(_vm.form.wr_1),callback:function ($$v) {_vm.$set(_vm.form, \"wr_1\", $$v)},expression:\"form.wr_1\"}}),_c('v-select',{attrs:{\"label\":\"스킨\",\"items\":_vm.skins},model:{value:(_vm.form.wr_2),callback:function ($$v) {_vm.$set(_vm.form, \"wr_2\", $$v)},expression:\"form.wr_2\"}}),_c('v-text-field',{attrs:{\"label\":\"제목\",\"counter\":\"120\",\"rules\":[_vm.rules.require({ label: '제목' })]},model:{value:(_vm.form.wr_title),callback:function ($$v) {_vm.$set(_vm.form, \"wr_title\", $$v)},expression:\"form.wr_title\"}}),_c('ez-tiptap',{attrs:{\"editable\":true},on:{\"uploadImage\":_vm.uploadImage},model:{value:(_vm.form.wr_content),callback:function ($$v) {_vm.$set(_vm.form, \"wr_content\", $$v)},expression:\"form.wr_content\"}})],1):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <v-container fluid>\r\n    <v-toolbar>\r\n      <v-toolbar-title>{{ pageTitle }}</v-toolbar-title>\r\n      <v-spacer />\r\n      <v-btn @click=\"save\" color=\"primary\" :loading=\"loading\">\r\n        <v-icon left>mdi-pencil</v-icon>\r\n        저장\r\n      </v-btn>\r\n    </v-toolbar>\r\n\r\n    <v-form v-if=\"form\" ref=\"form\" v-model=\"valid\" lazy-validation>\r\n      <input-duplicate-check\r\n        ref=\"id\"\r\n        label=\"ID\"\r\n        v-model=\"form.wr_1\"\r\n        :rules=\"[rules.require({ label: 'ID' }, rules.alphaNum())]\"\r\n        :cbCheck=\"checkId\"\r\n        :origin=\"id ? form.wr_1 : ''\"\r\n        :readonly=\"!!id\"\r\n      />\r\n      <v-select label=\"스킨\" v-model=\"form.wr_2\" :items=\"skins\" />\r\n\r\n      <v-text-field\r\n        label=\"제목\"\r\n        v-model=\"form.wr_title\"\r\n        counter=\"120\"\r\n        :rules=\"[rules.require({ label: '제목' })]\"\r\n      />\r\n\r\n      <ez-tiptap\r\n        :editable=\"true\"\r\n        v-model=\"form.wr_content\"\r\n        @uploadImage=\"uploadImage\"\r\n      />\r\n    </v-form>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nimport { mapState } from \"vuex\";\r\nimport validateRules from \"../../../../../util/validateRules\";\r\nimport InputPassword from \"../../../../components/InputForms/InputPassword.vue\";\r\nimport InputDuplicateCheck from \"../../../../components/InputForms/InputDuplicateCheck.vue\";\r\n\r\nexport default {\r\n  components: { InputPassword, InputDuplicateCheck },\r\n  name: \"BasicForm\",\r\n  title() {\r\n    return this.pageTitle;\r\n  },\r\n  props: {\r\n    config: Object,\r\n    access: Object,\r\n    id: [String, Number],\r\n  },\r\n  data() {\r\n    return {\r\n      form: null,\r\n      valid: true,\r\n      confimPw: \"\",\r\n      uploadFiles: Array(this.config.bo_upload_cnt).fill(null),\r\n      tags: [], // TODO : 서버에서 태그 목록을 가져온다.\r\n      loading: false,\r\n      upImages: [],\r\n      isWrite: false, // 작성을 했는지 여부\r\n      parentItem: null, // 부모글\r\n      skins: [],\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapState({\r\n      member: (state) => state.user.member,\r\n    }),\r\n    table() {\r\n      return this.config.bo_table;\r\n    },\r\n    pid() {\r\n      if (this.$route.query.act == \"reply\") {\r\n        return this.id;\r\n      } else {\r\n        return 0;\r\n      }\r\n    },\r\n    pageTitle() {\r\n      return (\r\n        this.config.bo_subject + (this.id ? \" 게시물 수정\" : \" 게시물 작성\")\r\n      );\r\n    },\r\n    rules: () => validateRules,\r\n  },\r\n  mounted() {\r\n    this.init();\r\n    this.fetchSkinList();\r\n  },\r\n  destroyed() {\r\n    // 작성을 완료하지 않고 에디터에서 업로드한 이미지가 있으면 삭제를 요청함\r\n    if (!this.isWrite && this.upImages.length) {\r\n      this.$axios.put(`/api/board/imgCancle/${this.table}`, this.upImages);\r\n    }\r\n  },\r\n  methods: {\r\n    async checkId() {\r\n      const data = await this.$axios.get(\r\n        `/api/contents/duplicateCheck?wr_1=${this.form.wr_1}`\r\n      );\r\n      return data;\r\n    },\r\n    async fetchSkinList() {\r\n      const data = await this.$axios(\"/api/contents/skinlist\");\r\n      console.log(\"data : \", data);\r\n      this.skins = data;\r\n    },\r\n    async init() {\r\n      if (this.id) {\r\n        const data = await this.$axios.get(\r\n          `/api/board/read/${this.table}/${this.id}`\r\n        );\r\n        if (this.pid) {\r\n          // 부모글의 답글\r\n          this.initForm();\r\n          this.form.wr_category = data.wr_category; // 부모글의 카데고리를 따라감\r\n          this.parentItem = data;\r\n        } else {\r\n          // 수정\r\n          this.form = data;\r\n        }\r\n        this.form.wr_password = \"\";\r\n      } else {\r\n        // 새글\r\n        this.initForm();\r\n      }\r\n      //\tconsole.log(this.form);\r\n    },\r\n    initForm() {\r\n      const form = {\r\n        wr_reply: 0,\r\n        wr_parent: this.pid, //  답글 작성할때 부모글 아이들 넣음\r\n        mb_id: this.member ? this.member.mb_id : 0, // 0이면 비회원 글 작성임\r\n        wr_email: this.member ? this.member.mb_email : \"\",\r\n        wr_name: this.member ? this.member.mb_name : \"\",\r\n        wr_password: \"\",\r\n        wr_category: this.$route.query.ca || this.config.bo_category[0] || \"\", // TODO: 링크할때 카데고리 정보를 넘긴다\r\n        wr_title: \"\",\r\n        wr_content: \"\",\r\n        wrTags: [],\r\n        // wrImgs: [],\r\n        // wrFiles: [],\r\n      };\r\n      for (let i = 1; i <= 10; i++) {\r\n        form[`wr_${i}`] = \"\";\r\n      }\r\n      form.wr_2 = \"basic\";\r\n      this.form = form;\r\n    },\r\n    fileTitle(i) {\r\n      //  TODO : 수정 할때 올렷던 파일 이름 요기서 사용할꺼에요\r\n      if (this.form.wrFiles) {\r\n        const wrFile = this.form.wrFiles[i - 1];\r\n        return wrFile && !wrFile.remove ? wrFile.bf_name : `첨부파일 ${i}`;\r\n      } else {\r\n        return `첨부파일 ${i}`;\r\n      }\r\n    },\r\n    async uploadImage({ file, desc, callback }) {\r\n      const formData = new FormData();\r\n      formData.append(\"upFile\", file);\r\n      formData.append(\"bf_desc\", desc);\r\n      const data = await this.$axios.post(\r\n        `/api/board/imageUpload/${this.table}`,\r\n        formData\r\n      );\r\n      this.upImages.push(data);\r\n      callback(`/upload/${this.table}/${data.bf_src}`);\r\n    },\r\n    async save() {\r\n      this.$refs.form.validate();\r\n      await this.$nextTick();\r\n      if (!this.valid) return;\r\n      if (!this.$refs.id.validate()) return;\r\n      this.loading = true;\r\n\r\n      const formData = new FormData();\r\n      const keys = Object.keys(this.form);\r\n\r\n      for (const key of keys) {\r\n        if (typeof this.form[key] == \"object\") {\r\n          formData.append(key, JSON.stringify(this.form[key]));\r\n        } else {\r\n          formData.append(key, this.form[key]);\r\n        }\r\n      }\r\n\r\n      // 작성시 토큰있는 경우 토큰 삽입\r\n      if (this.$route.query.token) {\r\n        formData.append(\"token\", this.$route.query.token);\r\n      }\r\n\r\n      let cnt = 0;\r\n      for (let i = 0; i < this.config.bo_upload_cnt; i++) {\r\n        if (this.uploadFiles[i] != null) {\r\n          formData.append(`upFiles[${cnt}]`, this.uploadFiles[i]);\r\n          cnt++;\r\n        }\r\n      }\r\n\r\n      // 에디터에서 업로드한 이미지\r\n      formData.append(\"upImages\", JSON.stringify(this.upImages));\r\n\r\n      let wr_id;\r\n      if (this.id && !this.pid) {\r\n        wr_id = await this.update(formData);\r\n      } else {\r\n        wr_id = await this.insert(formData);\r\n      }\r\n\r\n      // 글작성이 잘 끝났으면\r\n      if (wr_id) {\r\n        this.isWrite = true;\r\n        this.$router.push(`/board/${this.table}`);\r\n      }\r\n\r\n      this.loading = false;\r\n    },\r\n    async insert(formData) {\r\n      const data = await this.$axios.post(\r\n        `/api/board/write/${this.table}`,\r\n        formData\r\n      );\r\n      return data.wr_id;\r\n    },\r\n    async update(formData) {\r\n      const data = await this.$axios.put(\r\n        `/api/board/write/${this.table}/${this.id}`,\r\n        formData\r\n      );\r\n      return data.wr_id;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n</style>","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Form.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Form.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Form.vue?vue&type=template&id=ab9b2556&\"\nimport script from \"./Form.vue?vue&type=script&lang=js&\"\nexport * from \"./Form.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}